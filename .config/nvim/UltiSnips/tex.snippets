# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'V', 'W', 'X', 'Y', 'Z']]
texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

def isMath():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    if not set(texIgnoreMathZoneIds).isdisjoint(synstackids):
        return False
    return not set(texMathZoneIds).isdisjoint(synstackids)
endglobal

# -----------------------------------------------------------------------------
# Environments

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet item:: "itemize list" A
\begin{itemize}
	\item{${1}}
\end{itemize}
endsnippet

snippet enum:: "list" A
\begin{enumerate}
	\item{${1}}
\end{enumerate}
endsnippet

snippet theo:: "theorem block" A
\begin{Theorem}{${1}}{${2}}
${3}
\end{Theorem}
endsnippet

snippet def:: "definition block" A
\begin{Definition}{${1}}{${2}}
${3}
\end{Definition}
endsnippet

snippet ex:: "example block" A
\begin{Example}{${1}}{${2}}
${3}
\end{Example}
endsnippet


snippet checklist:: "checklist" Ai
\begin{CheckList}{${1:Task}}
	\Task{${2:open}}{${3}}
\end{CheckList}
endsnippet

snippet center:: "center text" Ai
\begin{center}
	${1}
\end{center}
endsnippet

snippet lstlisting:: "Code Block" Ai
\begin{lstlisting}[language=${1:Python}]
	${2}
\end{lstlisting}
endsnippet

# -----------------------------------------------------------------------------
# Headers
snippet sec:: "Section" A
\section{${1}}\label{${2}}
endsnippet

snippet sec*:: "Section*" A
\section*{${1}}
endsnippet

snippet ssec:: "Subsection" A
\subsection{${1}}
endsnippet

snippet ssec*:: "Subsection*" A
\subsection*{${1}}
endsnippet

snippet sssec:: "Subsubsection*" A
\subsubsection{${1}}
endsnippet


snippet sssec*:: "Subsubsection*" A
\subsubsection*{${1}}
endsnippet

snippet tableofcontents "Table of Contents" Ai
	\tableofcontents
	\pagebreak
	\addcontentsline{toc}{section}{${1}}
	\section*{${1}}
		${2}
endsnippet

# -----------------------------------------------------------------------------
# Images
snippet img/ "image path" Ai
\graphicspath { {${1:./images/}} }
endsnippet

snippet img: "images" Ai
\includegraphics[${1:scale=0.5}]{${2:images/}}
endsnippet


#-----------------------------------------------------------------------------------------
# Symbols
context "isMath()"
snippet // "fractions" Ai
\frac{${1}}{${2}}
endsnippet

context "isMath()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "isMath()"
snippet != "not equal" A
\ne
endsnippet

snippet <= "leq" iA
\le
endsnippet

snippet >= "geq" iA
\ge
endsnippet

snippet ... "dots" A
\dots
endsnippet

priority 10
context "isMath()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "isMath()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "isMath()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "isMath()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "isMath()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

context "isMath()"
snippet -> "right arrow" Ai
\rightarrow
endsnippet

context "isMath()"
snippet ^ "power" Ai
^{${1}}${0}
endsnippet

context "isMath()"
snippet _ "subscript" Ai
_{${1}}${0}
endsnippet

#-----------------------------------------------------------------------------------------
# Math

context "isMath()"
snippet sum "sum" Ai
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context "isMath()"
snippet lim "limit" Ai
\lim_{${1:n} \to ${2:\infty}}
endsnippet

context "isMath()"
snippet integral "integral" Ai
\int_{${1:0}}^{${2}} ${3} \,${4:dx}
endsnippet

#------------------------------------------------------------------------------
# deliminaters

snippet $$ "Inline math dollars" Ai
\(${1}\)
endsnippet

snippet !! "New Line Math" Ai

\[${1}\]
endsnippet

context "isMath()"
snippet () "left( right)" iA
\left( ${1} \right) ${0}
endsnippet

context "isMath()"
snippet [] "left[ right]" iA
\left[ ${1} \right] ${0}
endsnippet

# -----------------------------------------------------------------------------
# Misc
snippet standalone "standalone file header"
\documentclass[class=article, crop=false]{standalone}
endsnippet
